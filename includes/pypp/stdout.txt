[ mmgr: when init ]  str: 0 list: 0 tuple: 0 set: 0 dict: 0
Running Google Test main() from jadesoul
[==========] Running 12 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 12 tests from test
[ RUN      ] test.simple_demo
-------------------------------------- now running code
void simple_demo() {
	var a=2; cout<<a<<endl; string s="hi"; a=s; cout<<a<<endl;
}

-------------------------------------- the result
creating a new var: const sint4 : 2 : 0012FDA0
2
assignment form string& r: about to create tmp var
creating a new var: string & : hi : 0012FD48
before smart_clone_from_another_var
<Var this=0012FDA0 data: 2 0 attr: 00000100 00000000 00010000 00000000>
target is
<Var this=0012FD48 data: 12fd80 0 attr: 00000001 00000001 00000000 00000000>
after smart_clone_from_another_var
<Var this=0012FDA0 data: 12fd80 0 attr: 00000001 00000001 00000000 00000000>
hi
[       OK ] test.simple_demo (0 ms)
[ RUN      ] test.var_demo
-------------------------------------- now running code
void var_demo() {
	var a=40; cout<<a.uchar()<<" ";
}

-------------------------------------- the result
creating a new var: const sint4 : 28 : 0012FDA0
( [       OK ] test.var_demo (0 ms)
[ RUN      ] test.cstr_demo
-------------------------------------- now running code
void cstr_demo() {
	var a="s"; a.dump();
}

-------------------------------------- the result
creating a new str var from const char*: s : 0012FDA0
in init_as_str increase the heapstr 002F1C20 refcnt: 1=0+1
<Var this=0012FDA0 data: 2f1c20 667f38 attr: 00000010 00000001 00000000 00000000>
in ~var release a heapstr refernce, 002F1C20 -> 00667F38 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F38 refcnt=0
[       OK ] test.cstr_demo (0 ms)
[ RUN      ] test.for_demo
-------------------------------------- now running code
void for_demo() {
	for_n(i, 10) { var x=i+40; cout<<x.uchar()<<endl; } cout<<endl; const char *p="abc"; var a=p; var b="ac"; cout<<a<<"\t"<<b<<endl;
}

-------------------------------------- the result
creating a new var: const sint4 : 28 : 0012FD70
(
creating a new var: const sint4 : 29 : 0012FD70
)
creating a new var: const sint4 : 2a : 0012FD70
*
creating a new var: const sint4 : 2b : 0012FD70
+
creating a new var: const sint4 : 2c : 0012FD70
,
creating a new var: const sint4 : 2d : 0012FD70
-
creating a new var: const sint4 : 2e : 0012FD70
.
creating a new var: const sint4 : 2f : 0012FD70
/
creating a new var: const sint4 : 30 : 0012FD70
0
creating a new var: const sint4 : 31 : 0012FD70
1

creating a new str var from const char*: abc : 0012FD98
in init_as_str increase the heapstr 002F1C50 refcnt: 1=0+1
creating a new str var from const char*: ac : 0012FD88
in init_as_str increase the heapstr 002F1C60 refcnt: 1=0+1
abc	ac
in ~var release a heapstr refernce, 002F1C60 -> 00667F60 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F60 refcnt=0
in ~var release a heapstr refernce, 002F1C50 -> 00667F38 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F38 refcnt=0
[       OK ] test.for_demo (1 ms)
[ RUN      ] test.copy_construct_demo
-------------------------------------- now running code
void copy_construct_demo() {
	var b=1; var a=b; a="hi";
}

-------------------------------------- the result
creating a new var: const sint4 : 1 : 0012FD90
creating a new var: construct form var& r : 1 : 0012FDA0
before smart_clone_from_another_var
<Var this=0012FDA0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD90 data: 1 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FDA0 data: 1 0 attr: 00000100 00000000 00010000 00000000>
assignment form char* r: about to create tmp var
creating a new str var from const char*: hi : 0012FD58
in init_as_str increase the heapstr 002F1C70 refcnt: 1=0+1
before smart_clone_from_another_var
<Var this=0012FDA0 data: 1 0 attr: 00000100 00000000 00010000 00000000>
target is
<Var this=0012FD58 data: 2f1c70 667f38 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 2=1+1
after smart_clone_from_another_var
<Var this=0012FDA0 data: 2f1c70 667f38 attr: 00000010 00000001 00000000 00000000>
in ~var release a heapstr refernce, 002F1C70 -> 00667F38 refcnt: 2-1=1
in ~var release a heapstr refernce, 002F1C70 -> 00667F38 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F38 refcnt=0
[       OK ] test.copy_construct_demo (0 ms)
[ RUN      ] test.empty_list_demo
-------------------------------------- now running code
void empty_list_demo() {
	var a; a=list();
}

-------------------------------------- the result
init list from var* begin and var* end
in init_as_list increase the heaplist 002F1C80 refcnt: 1=0+1
entering copy construct form var& r
before smart_clone_from_another_var
<Var this=0012FDA0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD88 data: 2f1c80 668728 attr: 00000010 00000010 00000000 00000000>
in smart_clone_from_another_var increase the heaplist refcnt to: 2=1+1
after smart_clone_from_another_var
<Var this=0012FDA0 data: 2f1c80 668728 attr: 00000010 00000010 00000000 00000000>
in ~var release a heaplist refernce, 002F1C80 -> 00668728 refcnt: 2-1=1
in ~var release a heaplist refernce, 002F1C80 -> 00668728 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00668728 refcnt=0
[       OK ] test.empty_list_demo (1 ms)
[ RUN      ] test.empty_demo
-------------------------------------- now running code
void empty_demo() {
	var a; a=str(); a=list(); a=set(); a=dict();
}

-------------------------------------- the result
creating a new str var from const char*: NULL : 0012FD88
in init_as_str increase the heapstr 002F1C90 refcnt: 1=0+1
entering copy construct form var& r
before smart_clone_from_another_var
<Var this=0012FDA0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD88 data: 2f1c90 667f38 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 2=1+1
after smart_clone_from_another_var
<Var this=0012FDA0 data: 2f1c90 667f38 attr: 00000010 00000001 00000000 00000000>
in ~var release a heapstr refernce, 002F1C90 -> 00667F38 refcnt: 2-1=1
init list from var* begin and var* end
in init_as_list increase the heaplist 002F1CA0 refcnt: 1=0+1
entering copy construct form var& r
before smart_clone_from_another_var
<Var this=0012FDA0 data: 2f1c90 667f38 attr: 00000010 00000001 00000000 00000000>
target is
<Var this=0012FD78 data: 2f1ca0 668728 attr: 00000010 00000010 00000000 00000000>
in heapobj free(): free heapobj target with p=00667F38 refcnt=0
in smart_clone_from_another_var increase the heaplist refcnt to: 2=1+1
after smart_clone_from_another_var
<Var this=0012FDA0 data: 2f1ca0 668728 attr: 00000010 00000010 00000000 00000000>
in ~var release a heaplist refernce, 002F1CA0 -> 00668728 refcnt: 2-1=1
construct a set in heap from var * iterators begin and end
in init_as_set increase the heapset 002F1CC0 refcnt: 1=0+1
entering copy construct form var& r
before smart_clone_from_another_var
<Var this=0012FDA0 data: 2f1ca0 668728 attr: 00000010 00000010 00000000 00000000>
target is
<Var this=0012FD68 data: 2f1cc0 667f38 attr: 00000010 00001000 00000000 00000000>
in heapobj free(): free heapobj target with p=00668728 refcnt=0
in smart_clone_from_another_var increase the heapset refcnt to: 2=1+1
after smart_clone_from_another_var
<Var this=0012FDA0 data: 2f1cc0 667f38 attr: 00000010 00001000 00000000 00000000>
in ~var release a heapset refernce, 002F1CC0 -> 00667F38 refcnt: 2-1=1
construct a dict in heap from var * iterators begin and end
in init_as_dict increase the heapdict 002F1CB0 refcnt: 1=0+1
entering copy construct form var& r
before smart_clone_from_another_var
<Var this=0012FDA0 data: 2f1cc0 667f38 attr: 00000010 00001000 00000000 00000000>
target is
<Var this=0012FD58 data: 2f1cb0 667f60 attr: 00000010 00010000 00000000 00000000>
in heapobj free(): free heapobj target with p=00667F38 refcnt=0
in smart_clone_from_another_var increase the heapdict refcnt to: 2=1+1
after smart_clone_from_another_var
<Var this=0012FDA0 data: 2f1cb0 667f60 attr: 00000010 00010000 00000000 00000000>
in ~var release a heapdict refernce, 002F1CB0 -> 00667F60 refcnt: 2-1=1
in ~var release a heapdict refernce, 002F1CB0 -> 00667F60 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F60 refcnt=0
[       OK ] test.empty_demo (1 ms)
[ RUN      ] test.str_demo
-------------------------------------- now running code
void str_demo() {
	string s="jadesoul"; char *p="jadesoul"; var s1=""; var s2=str(); var s3=str("hi"); var s4=str(p); var s5=str(s.c_str()); var s6(s); var s7(p); var s8(s.c_str()); var s9(s.c_str(), s.c_str()+s.size()); var s10(p, p+3);
}

-------------------------------------- the result
creating a new str var from const char*:  : 0012FD08
in init_as_str increase the heapstr 002F1CE0 refcnt: 1=0+1
creating a new str var from const char*: NULL : 0012FD18
in init_as_str increase the heapstr 002F1CD0 refcnt: 1=0+1
creating a new str var from const char*: hi : 0012FD98
in init_as_str increase the heapstr 002F1CF0 refcnt: 1=0+1
creating a new str var from const char*: jadesoul : 0012FCF8
in init_as_str increase the heapstr 002F1D00 refcnt: 1=0+1
creating a new str var from const char*: jadesoul : 0012FD28
in init_as_str increase the heapstr 002F1D10 refcnt: 1=0+1
creating a new var: string & : jadesoul : 0012FD48
creating a new str var from char*: jadesoul : 0012FCE8
in init_as_str increase the heapstr 002F1D20 refcnt: 1=0+1
creating a new str var from const char*: jadesoul : 0012FD58
in init_as_str increase the heapstr 002F1D30 refcnt: 1=0+1
init str from char* begin and char* end
in init_as_str increase the heapstr 002F1D40 refcnt: 1=0+1
init str from char* begin and char* end
in init_as_str increase the heapstr 002F1D50 refcnt: 1=0+1
in ~var release a heapstr refernce, 002F1D50 -> 00668028 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00668028 refcnt=0
in ~var release a heapstr refernce, 002F1D40 -> 00668000 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00668000 refcnt=0
in ~var release a heapstr refernce, 002F1D30 -> 00667FD8 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667FD8 refcnt=0
in ~var release a heapstr refernce, 002F1D20 -> 00667FB0 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667FB0 refcnt=0
in ~var release a heapstr refernce, 002F1D10 -> 00667EE8 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667EE8 refcnt=0
in ~var release a heapstr refernce, 002F1D00 -> 00667F10 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F10 refcnt=0
in ~var release a heapstr refernce, 002F1CF0 -> 00667F88 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F88 refcnt=0
in ~var release a heapstr refernce, 002F1CD0 -> 00667F38 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F38 refcnt=0
in ~var release a heapstr refernce, 002F1CE0 -> 00667F60 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F60 refcnt=0
[       OK ] test.str_demo (0 ms)
[ RUN      ] test.list_demo
-------------------------------------- now running code
void list_demo() {
	var a[]={1,2,3}; vector<var> tmp(a, a+3); var b(a, a+3); var c=list(a, a+3); var d(tmp);
}

-------------------------------------- the result
creating a new var: const sint4 : 1 : 0012FD80
creating a new var: const sint4 : 2 : 0012FD90
creating a new var: const sint4 : 3 : 0012FDA0
creating a new var: construct form const var& r : 1 : 002F1138
before smart_clone_from_another_var
<Var this=002F1138 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD80 data: 1 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=002F1138 data: 1 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : 2 : 002F1148
before smart_clone_from_another_var
<Var this=002F1148 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD90 data: 2 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=002F1148 data: 2 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : 3 : 002F1158
before smart_clone_from_another_var
<Var this=002F1158 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FDA0 data: 3 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=002F1158 data: 3 0 attr: 00000100 00000000 00010000 00000000>
init list from var* begin and var* end
in init_as_list increase the heaplist 002F1D70 refcnt: 1=0+1
creating a new var: construct form const var& r : 1 : 00669330
before smart_clone_from_another_var
<Var this=00669330 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD80 data: 1 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=00669330 data: 1 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : 2 : 00669340
before smart_clone_from_another_var
<Var this=00669340 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD90 data: 2 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=00669340 data: 2 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : 3 : 00669350
before smart_clone_from_another_var
<Var this=00669350 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FDA0 data: 3 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=00669350 data: 3 0 attr: 00000100 00000000 00010000 00000000>
init list from var* begin and var* end
in init_as_list increase the heaplist 002F1D90 refcnt: 1=0+1
creating a new var: construct form const var& r : 1 : 00669368
before smart_clone_from_another_var
<Var this=00669368 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD80 data: 1 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=00669368 data: 1 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : 2 : 00669378
before smart_clone_from_another_var
<Var this=00669378 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD90 data: 2 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=00669378 data: 2 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : 3 : 00669388
before smart_clone_from_another_var
<Var this=00669388 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FDA0 data: 3 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=00669388 data: 3 0 attr: 00000100 00000000 00010000 00000000>
construct from a list& r
in ~var release a heaplist refernce, 002F1D90 -> 00668748 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00668748 refcnt=0
in ~var release a heaplist refernce, 002F1D70 -> 00668728 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00668728 refcnt=0
[       OK ] test.list_demo (2 ms)
[ RUN      ] test.tuple_demo
-------------------------------------- now running code
void tuple_demo() {
	var a=1, b=2, c=3; var x(a, b, c); var y=tuple(a, b, c);
}

-------------------------------------- the result
creating a new var: const sint4 : 1 : 0012FD80
creating a new var: const sint4 : 2 : 0012FD70
creating a new var: const sint4 : 3 : 0012FD60
creating a new var: construct form var& r : 3 : 0012FCF0
before smart_clone_from_another_var
<Var this=0012FCF0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD60 data: 3 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FCF0 data: 3 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form var& r : 2 : 0012FCE0
before smart_clone_from_another_var
<Var this=0012FCE0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD70 data: 2 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FCE0 data: 2 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form var& r : 1 : 0012FCD0
before smart_clone_from_another_var
<Var this=0012FCD0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD80 data: 1 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FCD0 data: 1 0 attr: 00000100 00000000 00010000 00000000>
init tuple with 3 vars
creating a new var: construct form var& r : 1 : 0012FC8C
before smart_clone_from_another_var
<Var this=0012FC8C data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FCD0 data: 1 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FC8C data: 1 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form var& r : 2 : 0012FC9C
before smart_clone_from_another_var
<Var this=0012FC9C data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FCE0 data: 2 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FC9C data: 2 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form var& r : 3 : 0012FCAC
before smart_clone_from_another_var
<Var this=0012FCAC data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FCF0 data: 3 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FCAC data: 3 0 attr: 00000100 00000000 00010000 00000000>
in init_as_tuple increase the heaptuple 002F1D60 refcnt: 1=0+1
creating a new var: construct form const var& r : 1 : 00668750
before smart_clone_from_another_var
<Var this=00668750 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC8C data: 1 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=00668750 data: 1 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : 2 : 00668770
before smart_clone_from_another_var
<Var this=00668770 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC9C data: 2 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=00668770 data: 2 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : 3 : 00668790
before smart_clone_from_another_var
<Var this=00668790 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FCAC data: 3 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=00668790 data: 3 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form var& r : 3 : 0012FCF0
before smart_clone_from_another_var
<Var this=0012FCF0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD60 data: 3 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FCF0 data: 3 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form var& r : 2 : 0012FCE0
before smart_clone_from_another_var
<Var this=0012FCE0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD70 data: 2 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FCE0 data: 2 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form var& r : 1 : 0012FCD0
before smart_clone_from_another_var
<Var this=0012FCD0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD80 data: 1 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FCD0 data: 1 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form var& r : 3 : 0012FC68
before smart_clone_from_another_var
<Var this=0012FC68 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FCF0 data: 3 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FC68 data: 3 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form var& r : 2 : 0012FC58
before smart_clone_from_another_var
<Var this=0012FC58 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FCE0 data: 2 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FC58 data: 2 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form var& r : 1 : 0012FC48
before smart_clone_from_another_var
<Var this=0012FC48 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FCD0 data: 1 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FC48 data: 1 0 attr: 00000100 00000000 00010000 00000000>
init tuple with 3 vars
creating a new var: construct form var& r : 1 : 0012FC04
before smart_clone_from_another_var
<Var this=0012FC04 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC48 data: 1 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FC04 data: 1 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form var& r : 2 : 0012FC14
before smart_clone_from_another_var
<Var this=0012FC14 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC58 data: 2 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FC14 data: 2 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form var& r : 3 : 0012FC24
before smart_clone_from_another_var
<Var this=0012FC24 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC68 data: 3 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=0012FC24 data: 3 0 attr: 00000100 00000000 00010000 00000000>
in init_as_tuple increase the heaptuple 002F1DA0 refcnt: 1=0+1
creating a new var: construct form const var& r : 1 : 006687D0
before smart_clone_from_another_var
<Var this=006687D0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC04 data: 1 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=006687D0 data: 1 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : 2 : 006687F0
before smart_clone_from_another_var
<Var this=006687F0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC14 data: 2 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=006687F0 data: 2 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : 3 : 00668810
before smart_clone_from_another_var
<Var this=00668810 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC24 data: 3 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=00668810 data: 3 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : TODO : 0012FDA0
before smart_clone_from_another_var
<Var this=0012FDA0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FCA8 data: 2f1da0 667f38 attr: 00000010 00000100 00000000 00000000>
in smart_clone_from_another_var increase the heaptuple refcnt to: 2=1+1
after smart_clone_from_another_var
<Var this=0012FDA0 data: 2f1da0 667f38 attr: 00000010 00000100 00000000 00000000>
in ~var release a heaptuple refernce, 002F1DA0 -> 00667F38 refcnt: 2-1=1
in ~var release a heaptuple refernce, 002F1DA0 -> 00667F38 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F38 refcnt=0
in ~var release a heaptuple refernce, 002F1D60 -> 00667F60 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F60 refcnt=0
[       OK ] test.tuple_demo (3 ms)
[ RUN      ] test.set_demo
-------------------------------------- now running code
void set_demo() {
	var a[]={1,2,2}; var x(a, a+3, int()); var y=set(a, a+3);
}

-------------------------------------- the result
creating a new var: const sint4 : 1 : 0012FD60
creating a new var: const sint4 : 2 : 0012FD70
creating a new var: const sint4 : 2 : 0012FD80
construct a set in heap from var * iterators begin and end
in init_as_set increase the heapset 002F1D80 refcnt: 1=0+1
creating a new var: construct form const var& r : 1 : 002F1730
before smart_clone_from_another_var
<Var this=002F1730 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD60 data: 1 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=002F1730 data: 1 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : 2 : 002F1148
before smart_clone_from_another_var
<Var this=002F1148 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD70 data: 2 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=002F1148 data: 2 0 attr: 00000100 00000000 00010000 00000000>
construct a set in heap from var * iterators begin and end
in init_as_set increase the heapset 002F1DC0 refcnt: 1=0+1
creating a new var: construct form const var& r : 1 : 00669370
before smart_clone_from_another_var
<Var this=00669370 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD60 data: 1 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=00669370 data: 1 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : 2 : 006693A0
before smart_clone_from_another_var
<Var this=006693A0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD70 data: 2 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=006693A0 data: 2 0 attr: 00000100 00000000 00010000 00000000>
in ~var release a heapset refernce, 002F1DC0 -> 00667F38 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F38 refcnt=0
in ~var release a heapset refernce, 002F1D80 -> 00667F60 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F60 refcnt=0
[       OK ] test.set_demo (1 ms)
[ RUN      ] test.dict_demo
-------------------------------------- now running code
void dict_demo() {
	var a[]={ "name", "jadesoul", "age", 24, "sex", 'M', "height", 1.76 }; var x(a, a+8, float()); var y=dict(a, a+8);
}

-------------------------------------- the result
creating a new str var from const char*: name : 0012FD10
in init_as_str increase the heapstr 002F1DB0 refcnt: 1=0+1
creating a new str var from const char*: jadesoul : 0012FD20
in init_as_str increase the heapstr 002F1DD0 refcnt: 1=0+1
creating a new str var from const char*: age : 0012FD30
in init_as_str increase the heapstr 002F1DE0 refcnt: 1=0+1
creating a new var: const sint4 : 18 : 0012FD40
creating a new str var from const char*: sex : 0012FD50
in init_as_str increase the heapstr 002F1DF0 refcnt: 1=0+1
creating a new var: const sint4 : 4d : 0012FD60
creating a new str var from const char*: height : 0012FD70
in init_as_str increase the heapstr 002F1E00 refcnt: 1=0+1
creating a new var: const real8 : 1.76 : 0012FD80
construct a dict in heap from var * iterators begin and end
in init_as_dict increase the heapdict 002F1E10 refcnt: 1=0+1
creating a new var: construct form const var& r : name : 0012FC6C
before smart_clone_from_another_var
<Var this=0012FC6C data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD10 data: 2f1db0 667f60 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 2=1+1
after smart_clone_from_another_var
<Var this=0012FC6C data: 2f1db0 667f60 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 0012FC7C
before smart_clone_from_another_var
<Var this=0012FC7C data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC5C data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=0012FC7C data: 0 0 attr: 00000000 00000000 00000000 00000000>
creating a new var: construct form const var& r : name : 00669380
before smart_clone_from_another_var
<Var this=00669380 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC6C data: 2f1db0 667f60 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 3=2+1
after smart_clone_from_another_var
<Var this=00669380 data: 2f1db0 667f60 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 00669390
before smart_clone_from_another_var
<Var this=00669390 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC7C data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=00669390 data: 0 0 attr: 00000000 00000000 00000000 00000000>
in ~var release a heapstr refernce, 002F1DB0 -> 00667F60 refcnt: 3-1=2
entering copy construct form var& r
before smart_clone_from_another_var
<Var this=00669390 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD20 data: 2f1dd0 667f38 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 2=1+1
after smart_clone_from_another_var
<Var this=00669390 data: 2f1dd0 667f38 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : age : 0012FC6C
before smart_clone_from_another_var
<Var this=0012FC6C data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD30 data: 2f1de0 667f88 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 2=1+1
after smart_clone_from_another_var
<Var this=0012FC6C data: 2f1de0 667f88 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 0012FC7C
before smart_clone_from_another_var
<Var this=0012FC7C data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC5C data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=0012FC7C data: 0 0 attr: 00000000 00000000 00000000 00000000>
creating a new var: construct form const var& r : age : 006693C0
before smart_clone_from_another_var
<Var this=006693C0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC6C data: 2f1de0 667f88 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 3=2+1
after smart_clone_from_another_var
<Var this=006693C0 data: 2f1de0 667f88 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 006693D0
before smart_clone_from_another_var
<Var this=006693D0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC7C data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=006693D0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
in ~var release a heapstr refernce, 002F1DE0 -> 00667F88 refcnt: 3-1=2
entering copy construct form var& r
before smart_clone_from_another_var
<Var this=006693D0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD40 data: 18 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=006693D0 data: 18 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : sex : 0012FC6C
before smart_clone_from_another_var
<Var this=0012FC6C data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD50 data: 2f1df0 667f10 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 2=1+1
after smart_clone_from_another_var
<Var this=0012FC6C data: 2f1df0 667f10 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 0012FC7C
before smart_clone_from_another_var
<Var this=0012FC7C data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC5C data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=0012FC7C data: 0 0 attr: 00000000 00000000 00000000 00000000>
creating a new var: construct form const var& r : sex : 00669400
before smart_clone_from_another_var
<Var this=00669400 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC6C data: 2f1df0 667f10 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 3=2+1
after smart_clone_from_another_var
<Var this=00669400 data: 2f1df0 667f10 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 00669410
before smart_clone_from_another_var
<Var this=00669410 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC7C data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=00669410 data: 0 0 attr: 00000000 00000000 00000000 00000000>
in ~var release a heapstr refernce, 002F1DF0 -> 00667F10 refcnt: 3-1=2
entering copy construct form var& r
before smart_clone_from_another_var
<Var this=00669410 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD60 data: 4d 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=00669410 data: 4d 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : height : 0012FC6C
before smart_clone_from_another_var
<Var this=0012FC6C data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD70 data: 2f1e00 667ee8 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 2=1+1
after smart_clone_from_another_var
<Var this=0012FC6C data: 2f1e00 667ee8 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 0012FC7C
before smart_clone_from_another_var
<Var this=0012FC7C data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC5C data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=0012FC7C data: 0 0 attr: 00000000 00000000 00000000 00000000>
creating a new var: construct form const var& r : height : 00669440
before smart_clone_from_another_var
<Var this=00669440 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC6C data: 2f1e00 667ee8 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 3=2+1
after smart_clone_from_another_var
<Var this=00669440 data: 2f1e00 667ee8 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 00669450
before smart_clone_from_another_var
<Var this=00669450 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC7C data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=00669450 data: 0 0 attr: 00000000 00000000 00000000 00000000>
in ~var release a heapstr refernce, 002F1E00 -> 00667EE8 refcnt: 3-1=2
entering copy construct form var& r
before smart_clone_from_another_var
<Var this=00669450 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD80 data: c28f5c29 3ffc28f5 attr: 00000100 00000000 00000000 00000010>
after smart_clone_from_another_var
<Var this=00669450 data: c28f5c29 3ffc28f5 attr: 00000100 00000000 00000000 00000010>
construct a dict in heap from var * iterators begin and end
in init_as_dict increase the heapdict 002F1E30 refcnt: 1=0+1
creating a new var: construct form const var& r : name : 0012FC50
before smart_clone_from_another_var
<Var this=0012FC50 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD10 data: 2f1db0 667f60 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 3=2+1
after smart_clone_from_another_var
<Var this=0012FC50 data: 2f1db0 667f60 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 0012FC60
before smart_clone_from_another_var
<Var this=0012FC60 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC40 data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=0012FC60 data: 0 0 attr: 00000000 00000000 00000000 00000000>
creating a new var: construct form const var& r : name : 006694C0
before smart_clone_from_another_var
<Var this=006694C0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC50 data: 2f1db0 667f60 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 4=3+1
after smart_clone_from_another_var
<Var this=006694C0 data: 2f1db0 667f60 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 006694D0
before smart_clone_from_another_var
<Var this=006694D0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC60 data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=006694D0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
in ~var release a heapstr refernce, 002F1DB0 -> 00667F60 refcnt: 4-1=3
entering copy construct form var& r
before smart_clone_from_another_var
<Var this=006694D0 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD20 data: 2f1dd0 667f38 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 3=2+1
after smart_clone_from_another_var
<Var this=006694D0 data: 2f1dd0 667f38 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : age : 0012FC50
before smart_clone_from_another_var
<Var this=0012FC50 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD30 data: 2f1de0 667f88 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 3=2+1
after smart_clone_from_another_var
<Var this=0012FC50 data: 2f1de0 667f88 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 0012FC60
before smart_clone_from_another_var
<Var this=0012FC60 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC40 data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=0012FC60 data: 0 0 attr: 00000000 00000000 00000000 00000000>
creating a new var: construct form const var& r : age : 00669500
before smart_clone_from_another_var
<Var this=00669500 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC50 data: 2f1de0 667f88 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 4=3+1
after smart_clone_from_another_var
<Var this=00669500 data: 2f1de0 667f88 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 00669510
before smart_clone_from_another_var
<Var this=00669510 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC60 data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=00669510 data: 0 0 attr: 00000000 00000000 00000000 00000000>
in ~var release a heapstr refernce, 002F1DE0 -> 00667F88 refcnt: 4-1=3
entering copy construct form var& r
before smart_clone_from_another_var
<Var this=00669510 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD40 data: 18 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=00669510 data: 18 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : sex : 0012FC50
before smart_clone_from_another_var
<Var this=0012FC50 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD50 data: 2f1df0 667f10 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 3=2+1
after smart_clone_from_another_var
<Var this=0012FC50 data: 2f1df0 667f10 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 0012FC60
before smart_clone_from_another_var
<Var this=0012FC60 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC40 data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=0012FC60 data: 0 0 attr: 00000000 00000000 00000000 00000000>
creating a new var: construct form const var& r : sex : 00669540
before smart_clone_from_another_var
<Var this=00669540 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC50 data: 2f1df0 667f10 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 4=3+1
after smart_clone_from_another_var
<Var this=00669540 data: 2f1df0 667f10 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 00669550
before smart_clone_from_another_var
<Var this=00669550 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC60 data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=00669550 data: 0 0 attr: 00000000 00000000 00000000 00000000>
in ~var release a heapstr refernce, 002F1DF0 -> 00667F10 refcnt: 4-1=3
entering copy construct form var& r
before smart_clone_from_another_var
<Var this=00669550 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD60 data: 4d 0 attr: 00000100 00000000 00010000 00000000>
after smart_clone_from_another_var
<Var this=00669550 data: 4d 0 attr: 00000100 00000000 00010000 00000000>
creating a new var: construct form const var& r : height : 0012FC50
before smart_clone_from_another_var
<Var this=0012FC50 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD70 data: 2f1e00 667ee8 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 3=2+1
after smart_clone_from_another_var
<Var this=0012FC50 data: 2f1e00 667ee8 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 0012FC60
before smart_clone_from_another_var
<Var this=0012FC60 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC40 data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=0012FC60 data: 0 0 attr: 00000000 00000000 00000000 00000000>
creating a new var: construct form const var& r : height : 00669580
before smart_clone_from_another_var
<Var this=00669580 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC50 data: 2f1e00 667ee8 attr: 00000010 00000001 00000000 00000000>
in smart_clone_from_another_var increase the heapstr refcnt: 4=3+1
after smart_clone_from_another_var
<Var this=00669580 data: 2f1e00 667ee8 attr: 00000010 00000001 00000000 00000000>
creating a new var: construct form const var& r : undefined : 00669590
before smart_clone_from_another_var
<Var this=00669590 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FC60 data: 0 0 attr: 00000000 00000000 00000000 00000000>
after smart_clone_from_another_var
<Var this=00669590 data: 0 0 attr: 00000000 00000000 00000000 00000000>
in ~var release a heapstr refernce, 002F1E00 -> 00667EE8 refcnt: 4-1=3
entering copy construct form var& r
before smart_clone_from_another_var
<Var this=00669590 data: 0 0 attr: 00000000 00000000 00000000 00000000>
target is
<Var this=0012FD80 data: c28f5c29 3ffc28f5 attr: 00000100 00000000 00000000 00000010>
after smart_clone_from_another_var
<Var this=00669590 data: c28f5c29 3ffc28f5 attr: 00000100 00000000 00000000 00000010>
in ~var release a heapdict refernce, 002F1E30 -> 00667FD8 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667FD8 refcnt=0
in ~var release a heapstr refernce, 002F1DF0 -> 00667F10 refcnt: 3-1=2
in ~var release a heapstr refernce, 002F1DD0 -> 00667F38 refcnt: 3-1=2
in ~var release a heapstr refernce, 002F1DB0 -> 00667F60 refcnt: 3-1=2
in ~var release a heapstr refernce, 002F1E00 -> 00667EE8 refcnt: 3-1=2
in ~var release a heapstr refernce, 002F1DE0 -> 00667F88 refcnt: 3-1=2
in ~var release a heapdict refernce, 002F1E10 -> 00667FB0 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667FB0 refcnt=0
in ~var release a heapstr refernce, 002F1DF0 -> 00667F10 refcnt: 2-1=1
in ~var release a heapstr refernce, 002F1DD0 -> 00667F38 refcnt: 2-1=1
in ~var release a heapstr refernce, 002F1DB0 -> 00667F60 refcnt: 2-1=1
in ~var release a heapstr refernce, 002F1E00 -> 00667EE8 refcnt: 2-1=1
in ~var release a heapstr refernce, 002F1DE0 -> 00667F88 refcnt: 2-1=1
in ~var release a heapstr refernce, 002F1E00 -> 00667EE8 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667EE8 refcnt=0
in ~var release a heapstr refernce, 002F1DF0 -> 00667F10 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F10 refcnt=0
in ~var release a heapstr refernce, 002F1DE0 -> 00667F88 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F88 refcnt=0
in ~var release a heapstr refernce, 002F1DD0 -> 00667F38 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F38 refcnt=0
in ~var release a heapstr refernce, 002F1DB0 -> 00667F60 refcnt: 1-1=0
in heapobj free(): free heapobj target with p=00667F60 refcnt=0
[       OK ] test.dict_demo (7 ms)
[----------] 12 tests from test (16 ms total)

[----------] Global test environment tear-down
[==========] 12 tests from 1 test case ran. (16 ms total)
[  PASSED  ] 12 tests.
[ mmgr: before delete ]  str: 13 list: 4 tuple: 2 set: 3 dict: 3
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in strlnk
delete a heapobj in listlnk
delete a heapobj in listlnk
delete a heapobj in listlnk
delete a heapobj in listlnk
delete a heapobj in tpllnk
delete a heapobj in tpllnk
delete a heapobj in setlnk
delete a heapobj in setlnk
delete a heapobj in setlnk
delete a heapobj in dictlnk
delete a heapobj in dictlnk
delete a heapobj in dictlnk
[ mmgr: after delete ]  str: 0 list: 0 tuple: 0 set: 0 dict: 0
