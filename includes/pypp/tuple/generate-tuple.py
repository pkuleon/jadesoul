from jadesoul import *'''template<class T1=int>struct tuple1 {	T1 v1;	friend ostream& operator <<(ostream& out, const tuple1& t) {\n\t\treturn out<<t.v1<<t.v2<<t.vn;\n\t}\n\tfriend istream& operator >>(istream& in, tuple1& t) {\n\t\treturn in>>t.v1>>t.v2>>t.vn;\n\t}\n};typedef tuple1<> tuple;template<class T1=int, class T2=T1>struct tuple2 {T1 v1; T2 v2;};'''def go():	for i in range(1, 1+100):		print ('template<class T%d=int'+', class T%d=T1'*(i-1)) % tuple(range(1, i+1))+\			'>\nstruct tuple%d' % i+\			(' {\n\tT%d v%d;'+'\n\tT%d v%d;'*(i-1)) % tuple(sorted(range(1, i+1)*2))+\			'\n\tfriend ostream& operator <<(ostream& out, const tuple%d& t) {\n\t\treturn out<<"( "' % i+\			'<<t.v%d<<", "'*i % tuple(range(1, 1+i))+\			'<<")"<<endl;\n\t}\n\tfriend istream& operator >>(istream& in, tuple%d& t) {\n\t\treturn in' % i+\			'>>t.v%d'*i % tuple(range(1, 1+i))+';\n\t}\n};\n'			