Jadesoul's C++ ToolSet
===============
 
Including
-----------------------------
* Jade C++ Framework
* Graph Framework 
* Machine Learning Framework
* pypp Framework 
* And the Newest: Jadesoul Framework 

Notes
-----------------------------
* By Jadesoul



================================
Hard work By Jadesoul in PKU @ 2010-2012, aha
 2012-4-02


================================


This is a cross-platform c++ framework to make c++ programming as easy as python. In this framework, we wrap and improve some STL containers and provide Python-like APIs to manipulate them.

For example:

str is based on string, it provides the most common strip, split ,join, slice, find and rfind in other languages: http://code.google.com/p/jadesoul/source/browse/trunk/includes/jadesoul/utils/str.hpp

list is based on vector< T >: http://code.google.com/p/jadesoul/source/browse/trunk/includes/jadesoul/utils/list.hpp

tuple is a template structure with references inside it, it can has as many elements as you want and is more efficient than pair<T1,T2>ï¼š http://code.google.com/p/jadesoul/source/browse/trunk/includes/jadesoul/utils/tuple.hpp

And its code is auto generated by a python script: http://code.google.com/p/jadesoul/source/browse/trunk/includes/jadesoul/utils/tuple-generator.py

set is based on std::set< T > or hash_set< T >: http://code.google.com/p/jadesoul/source/browse/trunk/includes/jadesoul/utils/set.hpp

dict is based on map<K,V> or hash_map<K, V>: http://code.google.com/p/jadesoul/source/browse/trunk/includes/jadesoul/utils/dict.hpp

And we provide a very easy APIs to deal with filesystem: http://code.google.com/p/jadesoul/source/browse/trunk/includes/jadesoul/utils/filesys.hpp

And for multi-threads programming: http://code.google.com/p/jadesoul/source/browse/trunk/includes/jadesoul/thread.hpp

With more features support like range, regexp, datetime, dump, enumerator, meminfo, network, I believe this framework will helps a lot on C++ application development.
